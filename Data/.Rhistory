# Add routes
cbind(setNames(lapply(routes, function(x) x=NA), routes)) %>%
# One row per route per day
gather(key = route, value = claim, -dates) %>%
# Set claims to zero
mutate(claim = 0) %>%
# Merge claims data
full_join(claims, by = c('dates', 'route')) %>%
# Get number of claims per day per route
group_by(dates, route) %>%
summarise(claims = sum(claim, na.rm = TRUE) + sum(claimed, na.rm = TRUE)) %>%
# Make factor binary numeric
mutate(claims = ifelse(claims > 0, 1, 0) %>%
ungroup
# Plot bad flag over time
modeldata %>%
filter(claims == 'yes') %>%
ggplot(aes(x = dates)) +
geom_histogram(binwidth = 1)
library(tidyverse)
library(magrittr)
library(lubridate)
library(forcats)
library(caret)
library(stringr)
setwd('C:/Users/Laurens/Dropbox/projects/ecmwf/code/ReadingBus/Data/')
claims <- read_csv('busClaims.csv')
apiKey <- readline('Enter API key:')
# Data Cleaning --------------------------------------------------------
# Get useful route names
routes <- c('2','3','4','5','6','7','9','11','12','13','14','15','16','17',
'19a','19b','19c','21','22','23','24','25','26','27','28','33','500') %>%
factor
claims %<>%
mutate(
route = Route %>%
# Take part before slash
str_split('/') %>%
lapply(FUN = function(x) {x[[1]]}) %>%
unlist,
# Remove trailing spaces
route = route %>%
str_split(boundary('word')) %>%
lapply(FUN = function(x) {x[[1]]}) %>%
unlist,
# Remove leading zeros
route = route %>%
str_split('^[0]{1,9}') %>%
lapply(FUN = function(x) {x[[length(x)]]}) %>%
unlist %>% factor,
route = route %>%
fct_recode(
`2` = '2A',
`4` = 'X4',
`6` = '6A',
`27` = '29')) %>%
# Create proper date field
mutate(dates = `Accident Date` %>% as.Date(format = '%d/%m/%y')) %>%
# Only claims in 2015 and 2016
filter(year(dates) > 2014 & year(dates) < 2017) %>%
# Only valid routes
filter(route %in% routes) %>%
# Make bad flag
mutate(claimed = 1) %>%
select(one_of('dates', 'route', 'claimed'))
# Create model data frame ----------------------------------------------
modeldata <- data_frame(dates = seq(ymd('2015-01-01'), ymd('2016-12-31'), by = 'days')) %>%
# Add routes
cbind(setNames(lapply(routes, function(x) x=NA), routes)) %>%
# One row per route per day
gather(key = route, value = claim, -dates) %>%
# Set claims to zero
mutate(claim = 0) %>%
# Merge claims data
full_join(claims, by = c('dates', 'route')) %>%
# Get number of claims per day per route
group_by(dates, route) %>%
summarise(claims = sum(claim, na.rm = TRUE) + sum(claimed, na.rm = TRUE)) %>%
# Make factor binary numeric
mutate(claims = ifelse(claims > 0, 1, 0)) %>%
ungroup
# Plot bad flag over time
modeldata %>%
filter(claims == 'yes') %>%
ggplot(aes(x = dates)) +
geom_histogram(binwidth = 1)
# Run the model ---------------------------------------------------------
set.seed(1717)
kfolds <- createFolds(modeldata$claims, k = 3)
modeldata2 <- modeldata %>%
select(-dates)
data_train <- modeldata2[-kfolds[[3]],]
data_test <- modeldata2[kfolds[[3]],]
library(Information)
infotab <- create_infotables(data_train, y = 'claims')
plot_infotables(infotab, 'route')
data_train2 <- data_train %>%
mutate(claim = ifelse(claims > 0, 'yes', 'no')) %>%
spread(key = route, value = claims) %>%
mutate(
`2` = infotab$Tables$route %>% {.[.$route == '2','WOE']},
`3` = infotab$Tables$route %>% {.[.$route == '3','WOE']},
`4` = infotab$Tables$route %>% {.[.$route == '4','WOE']},
`5` = infotab$Tables$route %>% {.[.$route == '5','WOE']},
`6` = infotab$Tables$route %>% {.[.$route == '6','WOE']},
`7` = infotab$Tables$route %>% {.[.$route == '7','WOE']},
`9` = infotab$Tables$route %>% {.[.$route == '9','WOE']},
`11` = infotab$Tables$route %>% {.[.$route == '11','WOE']},
`12` = infotab$Tables$route %>% {.[.$route == '12','WOE']},
`13` = infotab$Tables$route %>% {.[.$route == '13','WOE']},
`14` = infotab$Tables$route %>% {.[.$route == '14','WOE']},
`15` = infotab$Tables$route %>% {.[.$route == '15','WOE']},
`16` = infotab$Tables$route %>% {.[.$route == '16','WOE']},
`17` = infotab$Tables$route %>% {.[.$route == '17','WOE']},
`19a` = infotab$Tables$route %>% {.[.$route == '19a','WOE']},
`19b` = infotab$Tables$route %>% {.[.$route == '19b','WOE']},
`19c` = infotab$Tables$route %>% {.[.$route == '19c','WOE']},
`21` = infotab$Tables$route %>% {.[.$route == '21','WOE']},
`22` = infotab$Tables$route %>% {.[.$route == '22','WOE']},
`23` = infotab$Tables$route %>% {.[.$route == '23','WOE']},
`24` = infotab$Tables$route %>% {.[.$route == '24','WOE']},
`25` = infotab$Tables$route %>% {.[.$route == '25','WOE']},
`26` = infotab$Tables$route %>% {.[.$route == '26','WOE']},
`27` = infotab$Tables$route %>% {.[.$route == '27','WOE']},
`28` = infotab$Tables$route %>% {.[.$route == '28','WOE']},
`33` = infotab$Tables$route %>% {.[.$route == '33','WOE']},
`500` = infotab$Tables$route %>% {.[.$route == '500','WOE']}) %>%
gather(key = route, value = WOE, -dates, -claim) %>%
select(WOE, claim)
data_train
data_train <- modeldata[-kfolds[[3]],]
data_test <- modeldata[kfolds[[3]],]
library(Information)
infotab <- create_infotables(data_train, y = 'claims')
plot_infotables(infotab, 'route')
data_train2 <- data_train %>%
mutate(claim = ifelse(claims > 0, 'yes', 'no')) %>%
spread(key = route, value = claims) %>%
mutate(
`2` = infotab$Tables$route %>% {.[.$route == '2','WOE']},
`3` = infotab$Tables$route %>% {.[.$route == '3','WOE']},
`4` = infotab$Tables$route %>% {.[.$route == '4','WOE']},
`5` = infotab$Tables$route %>% {.[.$route == '5','WOE']},
`6` = infotab$Tables$route %>% {.[.$route == '6','WOE']},
`7` = infotab$Tables$route %>% {.[.$route == '7','WOE']},
`9` = infotab$Tables$route %>% {.[.$route == '9','WOE']},
`11` = infotab$Tables$route %>% {.[.$route == '11','WOE']},
`12` = infotab$Tables$route %>% {.[.$route == '12','WOE']},
`13` = infotab$Tables$route %>% {.[.$route == '13','WOE']},
`14` = infotab$Tables$route %>% {.[.$route == '14','WOE']},
`15` = infotab$Tables$route %>% {.[.$route == '15','WOE']},
`16` = infotab$Tables$route %>% {.[.$route == '16','WOE']},
`17` = infotab$Tables$route %>% {.[.$route == '17','WOE']},
`19a` = infotab$Tables$route %>% {.[.$route == '19a','WOE']},
`19b` = infotab$Tables$route %>% {.[.$route == '19b','WOE']},
`19c` = infotab$Tables$route %>% {.[.$route == '19c','WOE']},
`21` = infotab$Tables$route %>% {.[.$route == '21','WOE']},
`22` = infotab$Tables$route %>% {.[.$route == '22','WOE']},
`23` = infotab$Tables$route %>% {.[.$route == '23','WOE']},
`24` = infotab$Tables$route %>% {.[.$route == '24','WOE']},
`25` = infotab$Tables$route %>% {.[.$route == '25','WOE']},
`26` = infotab$Tables$route %>% {.[.$route == '26','WOE']},
`27` = infotab$Tables$route %>% {.[.$route == '27','WOE']},
`28` = infotab$Tables$route %>% {.[.$route == '28','WOE']},
`33` = infotab$Tables$route %>% {.[.$route == '33','WOE']},
`500` = infotab$Tables$route %>% {.[.$route == '500','WOE']}) %>%
gather(key = route, value = WOE, -dates, -claim) %>%
select(WOE, claim)
data_train2
data_train2 <- data_train %>%
mutate(claim = ifelse(claims > 0, 'yes', 'no')) %>%
spread(key = route, value = claims) %>%
mutate(
`2` = infotab$Tables$route %>% {.[.$route == '2','WOE']},
`3` = infotab$Tables$route %>% {.[.$route == '3','WOE']},
`4` = infotab$Tables$route %>% {.[.$route == '4','WOE']},
`5` = infotab$Tables$route %>% {.[.$route == '5','WOE']},
`6` = infotab$Tables$route %>% {.[.$route == '6','WOE']},
`7` = infotab$Tables$route %>% {.[.$route == '7','WOE']},
`9` = infotab$Tables$route %>% {.[.$route == '9','WOE']},
`11` = infotab$Tables$route %>% {.[.$route == '11','WOE']},
`12` = infotab$Tables$route %>% {.[.$route == '12','WOE']},
`13` = infotab$Tables$route %>% {.[.$route == '13','WOE']},
`14` = infotab$Tables$route %>% {.[.$route == '14','WOE']},
`15` = infotab$Tables$route %>% {.[.$route == '15','WOE']},
`16` = infotab$Tables$route %>% {.[.$route == '16','WOE']},
`17` = infotab$Tables$route %>% {.[.$route == '17','WOE']},
`19a` = infotab$Tables$route %>% {.[.$route == '19a','WOE']},
`19b` = infotab$Tables$route %>% {.[.$route == '19b','WOE']},
`19c` = infotab$Tables$route %>% {.[.$route == '19c','WOE']},
`21` = infotab$Tables$route %>% {.[.$route == '21','WOE']},
`22` = infotab$Tables$route %>% {.[.$route == '22','WOE']},
`23` = infotab$Tables$route %>% {.[.$route == '23','WOE']},
`24` = infotab$Tables$route %>% {.[.$route == '24','WOE']},
`25` = infotab$Tables$route %>% {.[.$route == '25','WOE']},
`26` = infotab$Tables$route %>% {.[.$route == '26','WOE']},
`27` = infotab$Tables$route %>% {.[.$route == '27','WOE']},
`28` = infotab$Tables$route %>% {.[.$route == '28','WOE']},
`33` = infotab$Tables$route %>% {.[.$route == '33','WOE']},
`500` = infotab$Tables$route %>% {.[.$route == '500','WOE']}) %>%
gather(key = route, value = WOE, -dates, -claim) %>%
select(route_woe, claim)
data_train2 <- data_train %>%
mutate(claim = ifelse(claims > 0, 'yes', 'no')) %>%
spread(key = route, value = claims) %>%
mutate(
`2` = infotab$Tables$route %>% {.[.$route == '2','WOE']},
`3` = infotab$Tables$route %>% {.[.$route == '3','WOE']},
`4` = infotab$Tables$route %>% {.[.$route == '4','WOE']},
`5` = infotab$Tables$route %>% {.[.$route == '5','WOE']},
`6` = infotab$Tables$route %>% {.[.$route == '6','WOE']},
`7` = infotab$Tables$route %>% {.[.$route == '7','WOE']},
`9` = infotab$Tables$route %>% {.[.$route == '9','WOE']},
`11` = infotab$Tables$route %>% {.[.$route == '11','WOE']},
`12` = infotab$Tables$route %>% {.[.$route == '12','WOE']},
`13` = infotab$Tables$route %>% {.[.$route == '13','WOE']},
`14` = infotab$Tables$route %>% {.[.$route == '14','WOE']},
`15` = infotab$Tables$route %>% {.[.$route == '15','WOE']},
`16` = infotab$Tables$route %>% {.[.$route == '16','WOE']},
`17` = infotab$Tables$route %>% {.[.$route == '17','WOE']},
`19a` = infotab$Tables$route %>% {.[.$route == '19a','WOE']},
`19b` = infotab$Tables$route %>% {.[.$route == '19b','WOE']},
`19c` = infotab$Tables$route %>% {.[.$route == '19c','WOE']},
`21` = infotab$Tables$route %>% {.[.$route == '21','WOE']},
`22` = infotab$Tables$route %>% {.[.$route == '22','WOE']},
`23` = infotab$Tables$route %>% {.[.$route == '23','WOE']},
`24` = infotab$Tables$route %>% {.[.$route == '24','WOE']},
`25` = infotab$Tables$route %>% {.[.$route == '25','WOE']},
`26` = infotab$Tables$route %>% {.[.$route == '26','WOE']},
`27` = infotab$Tables$route %>% {.[.$route == '27','WOE']},
`28` = infotab$Tables$route %>% {.[.$route == '28','WOE']},
`33` = infotab$Tables$route %>% {.[.$route == '33','WOE']},
`500` = infotab$Tables$route %>% {.[.$route == '500','WOE']}) %>%
gather(key = route, value = route_woe, -dates, -claim) %>%
select(route_woe, claim)
mod_tune <- expand.grid(
alpha = c(0.1, 0.5, 1), #c(0.1, 0.2, 0.3, 0.5, 0.7, 1),
lambda = c(0.0001, 0.001, 0.01)) #c(0.00003, 0.0001, 0.0003, 0.001, 0.003, 0.01, 0.03, 0.1))
mod_eval <- trainControl(
method = "repeatedcv",
number = 10,
repeats = 3,
classProbs = TRUE,
summaryFunction = twoClassSummary)
mod_train <- train(
claim ~ 1 + .,
data = data_train2,
method = "glmnet",
family = "binomial",
metric = "ROC",
tuneGrid = mod_tune,
trControl = mod_eval)
data_train2
data_train2 <- data_train %>%
mutate(claim = ifelse(claims > 0, 'yes', 'no')) %>%
spread(key = route, value = claims) %>%
mutate(
`2` = infotab$Tables$route %>% {.[.$route == '2','WOE']},
`3` = infotab$Tables$route %>% {.[.$route == '3','WOE']},
`4` = infotab$Tables$route %>% {.[.$route == '4','WOE']},
`5` = infotab$Tables$route %>% {.[.$route == '5','WOE']},
`6` = infotab$Tables$route %>% {.[.$route == '6','WOE']},
`7` = infotab$Tables$route %>% {.[.$route == '7','WOE']},
`9` = infotab$Tables$route %>% {.[.$route == '9','WOE']},
`11` = infotab$Tables$route %>% {.[.$route == '11','WOE']},
`12` = infotab$Tables$route %>% {.[.$route == '12','WOE']},
`13` = infotab$Tables$route %>% {.[.$route == '13','WOE']},
`14` = infotab$Tables$route %>% {.[.$route == '14','WOE']},
`15` = infotab$Tables$route %>% {.[.$route == '15','WOE']},
`16` = infotab$Tables$route %>% {.[.$route == '16','WOE']},
`17` = infotab$Tables$route %>% {.[.$route == '17','WOE']},
`19a` = infotab$Tables$route %>% {.[.$route == '19a','WOE']},
`19b` = infotab$Tables$route %>% {.[.$route == '19b','WOE']},
`19c` = infotab$Tables$route %>% {.[.$route == '19c','WOE']},
`21` = infotab$Tables$route %>% {.[.$route == '21','WOE']},
`22` = infotab$Tables$route %>% {.[.$route == '22','WOE']},
`23` = infotab$Tables$route %>% {.[.$route == '23','WOE']},
`24` = infotab$Tables$route %>% {.[.$route == '24','WOE']},
`25` = infotab$Tables$route %>% {.[.$route == '25','WOE']},
`26` = infotab$Tables$route %>% {.[.$route == '26','WOE']},
`27` = infotab$Tables$route %>% {.[.$route == '27','WOE']},
`28` = infotab$Tables$route %>% {.[.$route == '28','WOE']},
`33` = infotab$Tables$route %>% {.[.$route == '33','WOE']},
`500` = infotab$Tables$route %>% {.[.$route == '500','WOE']}) %>%
gather(key = route, value = route_woe, -dates, -claim) %>%
select(dates, route_woe, claim)
mod_tune <- expand.grid(
alpha = c(0.1, 0.5, 1), #c(0.1, 0.2, 0.3, 0.5, 0.7, 1),
lambda = c(0.0001, 0.001, 0.01)) #c(0.00003, 0.0001, 0.0003, 0.001, 0.003, 0.01, 0.03, 0.1))
mod_eval <- trainControl(
method = "repeatedcv",
number = 10,
repeats = 3,
classProbs = TRUE,
summaryFunction = twoClassSummary)
mod_train <- train(
claim ~ 1 + .,
data = data_train2,
method = "glmnet",
family = "binomial",
metric = "ROC",
tuneGrid = mod_tune,
trControl = mod_eval)
data_train2
modeldata
library(tidyverse)
library(magrittr)
library(lubridate)
library(forcats)
library(caret)
library(stringr)
setwd('C:/Users/Laurens/Dropbox/projects/ecmwf/code/ReadingBus/Data/')
claims <- read_csv('busClaims.csv')
apiKey <- readline('Enter API key:')
# Data Cleaning --------------------------------------------------------
# Get useful route names
routes <- c('2','3','4','5','6','7','9','11','12','13','14','15','16','17',
'19a','19b','19c','21','22','23','24','25','26','27','28','33','500') %>%
factor
claims %<>%
mutate(
route = Route %>%
# Take part before slash
str_split('/') %>%
lapply(FUN = function(x) {x[[1]]}) %>%
unlist,
# Remove trailing spaces
route = route %>%
str_split(boundary('word')) %>%
lapply(FUN = function(x) {x[[1]]}) %>%
unlist,
# Remove leading zeros
route = route %>%
str_split('^[0]{1,9}') %>%
lapply(FUN = function(x) {x[[length(x)]]}) %>%
unlist %>% factor,
route = route %>%
fct_recode(
`2` = '2A',
`4` = 'X4',
`6` = '6A',
`27` = '29')) %>%
# Create proper date field
mutate(dates = `Accident Date` %>% as.Date(format = '%d/%m/%y')) %>%
# Only claims in 2015 and 2016
filter(year(dates) > 2014 & year(dates) < 2017) %>%
# Only valid routes
filter(route %in% routes) %>%
# Make bad flag
mutate(claimed = 1) %>%
select(one_of('dates', 'route', 'claimed'))
# Create model data frame ----------------------------------------------
modeldata <- data_frame(dates = seq(ymd('2015-01-01'), ymd('2016-12-31'), by = 'days')) %>%
# Add routes
cbind(setNames(lapply(routes, function(x) x=NA), routes)) %>%
# One row per route per day
gather(key = route, value = claim, -dates) %>%
# Set claims to zero
mutate(claim = 0) %>%
# Merge claims data
full_join(claims, by = c('dates', 'route')) %>%
# Get number of claims per day per route
group_by(dates, route) %>%
summarise(claims = sum(claim, na.rm = TRUE) + sum(claimed, na.rm = TRUE)) %>%
# Make factor binary numeric
mutate(claims = ifelse(claims > 0, 1, 0)) %>%
ungroup
# Plot bad flag over time
modeldata %>%
filter(claims == 'yes') %>%
ggplot(aes(x = dates)) +
geom_histogram(binwidth = 1)
# Run the model ---------------------------------------------------------
set.seed(1717)
kfolds <- createFolds(modeldata$claims, k = 3)
data_train <- modeldata[-kfolds[[3]],]
data_test <- modeldata[kfolds[[3]],]
library(Information)
# Get WoE table
infotab <- create_infotables(data_train, y = 'claims')
# Plot WoE
plot_infotables(infotab, 'route')
# Modify factor levels
data_train2 <- data_train %>%
mutate(claim = ifelse(claims > 0, 'yes', 'no')) %>%
spread(key = route, value = claims) %>%
mutate(
`2` = infotab$Tables$route %>% {.[.$route == '2','WOE']},
`3` = infotab$Tables$route %>% {.[.$route == '3','WOE']},
`4` = infotab$Tables$route %>% {.[.$route == '4','WOE']},
`5` = infotab$Tables$route %>% {.[.$route == '5','WOE']},
`6` = infotab$Tables$route %>% {.[.$route == '6','WOE']},
`7` = infotab$Tables$route %>% {.[.$route == '7','WOE']},
`9` = infotab$Tables$route %>% {.[.$route == '9','WOE']},
`11` = infotab$Tables$route %>% {.[.$route == '11','WOE']},
`12` = infotab$Tables$route %>% {.[.$route == '12','WOE']},
`13` = infotab$Tables$route %>% {.[.$route == '13','WOE']},
`14` = infotab$Tables$route %>% {.[.$route == '14','WOE']},
`15` = infotab$Tables$route %>% {.[.$route == '15','WOE']},
`16` = infotab$Tables$route %>% {.[.$route == '16','WOE']},
`17` = infotab$Tables$route %>% {.[.$route == '17','WOE']},
`19a` = infotab$Tables$route %>% {.[.$route == '19a','WOE']},
`19b` = infotab$Tables$route %>% {.[.$route == '19b','WOE']},
`19c` = infotab$Tables$route %>% {.[.$route == '19c','WOE']},
`21` = infotab$Tables$route %>% {.[.$route == '21','WOE']},
`22` = infotab$Tables$route %>% {.[.$route == '22','WOE']},
`23` = infotab$Tables$route %>% {.[.$route == '23','WOE']},
`24` = infotab$Tables$route %>% {.[.$route == '24','WOE']},
`25` = infotab$Tables$route %>% {.[.$route == '25','WOE']},
`26` = infotab$Tables$route %>% {.[.$route == '26','WOE']},
`27` = infotab$Tables$route %>% {.[.$route == '27','WOE']},
`28` = infotab$Tables$route %>% {.[.$route == '28','WOE']},
`33` = infotab$Tables$route %>% {.[.$route == '33','WOE']},
`500` = infotab$Tables$route %>% {.[.$route == '500','WOE']}) %>%
gather(key = route, value = route_woe, -dates, -claim) %>%
select(dates, route_woe, claim)
# Train glmnet model
mod_tune <- expand.grid(
alpha = c(0.1, 0.5, 1), #c(0.1, 0.2, 0.3, 0.5, 0.7, 1),
lambda = c(0.0001, 0.001, 0.01)) #c(0.00003, 0.0001, 0.0003, 0.001, 0.003, 0.01, 0.03, 0.1))
mod_eval <- trainControl(
method = "repeatedcv",
number = 10,
repeats = 3,
classProbs = TRUE,
summaryFunction = twoClassSummary)
mod_train <- train(
claim ~ 1 + .,
data = data_train2,
method = "glmnet",
family = "binomial",
metric = "ROC",
tuneGrid = mod_tune,
trControl = mod_eval)
head(modeldata)
mod_train <- train(
claim ~ 1 + .,
data = modeldata,
method = "glmnet",
family = "binomial",
metric = "ROC",
tuneGrid = mod_tune,
trControl = mod_eval)
mod_train <- train(
claims ~ 1 + .,
data = modeldata,
method = "glmnet",
family = "binomial",
metric = "ROC",
tuneGrid = mod_tune,
trControl = mod_eval)
modeldata %<>% mutate(claims = ifelse(claims > 0, 'yes', 'no'))
mod_train <- train(
claims ~ 1 + .,
data = modeldata,
method = "glmnet",
family = "binomial",
metric = "ROC",
tuneGrid = mod_tune,
trControl = mod_eval)
head(modeldata)
head(data_train2)
data_train2 <- data_train %>%
mutate(claim = ifelse(claims > 0, 'yes', 'no') %>% as.factor) %>%
spread(key = route, value = claims) %>%
mutate(
`2` = infotab$Tables$route %>% {.[.$route == '2','WOE']},
`3` = infotab$Tables$route %>% {.[.$route == '3','WOE']},
`4` = infotab$Tables$route %>% {.[.$route == '4','WOE']},
`5` = infotab$Tables$route %>% {.[.$route == '5','WOE']},
`6` = infotab$Tables$route %>% {.[.$route == '6','WOE']},
`7` = infotab$Tables$route %>% {.[.$route == '7','WOE']},
`9` = infotab$Tables$route %>% {.[.$route == '9','WOE']},
`11` = infotab$Tables$route %>% {.[.$route == '11','WOE']},
`12` = infotab$Tables$route %>% {.[.$route == '12','WOE']},
`13` = infotab$Tables$route %>% {.[.$route == '13','WOE']},
`14` = infotab$Tables$route %>% {.[.$route == '14','WOE']},
`15` = infotab$Tables$route %>% {.[.$route == '15','WOE']},
`16` = infotab$Tables$route %>% {.[.$route == '16','WOE']},
`17` = infotab$Tables$route %>% {.[.$route == '17','WOE']},
`19a` = infotab$Tables$route %>% {.[.$route == '19a','WOE']},
`19b` = infotab$Tables$route %>% {.[.$route == '19b','WOE']},
`19c` = infotab$Tables$route %>% {.[.$route == '19c','WOE']},
`21` = infotab$Tables$route %>% {.[.$route == '21','WOE']},
`22` = infotab$Tables$route %>% {.[.$route == '22','WOE']},
`23` = infotab$Tables$route %>% {.[.$route == '23','WOE']},
`24` = infotab$Tables$route %>% {.[.$route == '24','WOE']},
`25` = infotab$Tables$route %>% {.[.$route == '25','WOE']},
`26` = infotab$Tables$route %>% {.[.$route == '26','WOE']},
`27` = infotab$Tables$route %>% {.[.$route == '27','WOE']},
`28` = infotab$Tables$route %>% {.[.$route == '28','WOE']},
`33` = infotab$Tables$route %>% {.[.$route == '33','WOE']},
`500` = infotab$Tables$route %>% {.[.$route == '500','WOE']}) %>%
gather(key = route, value = route_woe, -dates, -claim) %>%
select(dates, route_woe, claim)
mod_tune <- expand.grid(
alpha = c(0.1, 0.5, 1), #c(0.1, 0.2, 0.3, 0.5, 0.7, 1),
lambda = c(0.0001, 0.001, 0.01)) #c(0.00003, 0.0001, 0.0003, 0.001, 0.003, 0.01, 0.03, 0.1))
mod_eval <- trainControl(
method = "repeatedcv",
number = 10,
repeats = 3,
classProbs = TRUE,
summaryFunction = twoClassSummary)
mod_train <- train(
claims ~ 1 + .,
data = modeldata,
method = "glmnet",
family = "binomial",
metric = "ROC",
tuneGrid = mod_tune,
trControl = mod_eval)
